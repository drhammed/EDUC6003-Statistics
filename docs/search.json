[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to EDUC 6003 Advanced Statistics. This website will be used for all the tutorials of this course. We will be using R/RStudio throughout the semester. However, anyone interested in using Python should feel free to do so (and I‚Äôm happy to chat about that). If you‚Äôre very new to R for statistical analysis and would like a quick intro, please refer to this website R Workshop for Statistical Analysis.\nIn fact, this website was built entirely using R!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "This tutorial will serve as a Guide to Enhanced Reliability Estimation with R\n\n\nReliability refers to the consistency and precision of measurement instruments. In psychological testing, it assesses the extent to which a test produces stable and consistent results.\n\n\nMeasurement Precision: Ensures that the scores accurately reflect the true attributes being measured.\nResearch Validity: High reliability is a prerequisite for valid conclusions and replicable research findings.\nError Reduction: Minimizes the impact of random errors, enhancing the clarity of observed relationships between constructs.\n\n\n\nInternal Consistency: Degree to which items within a test measure the same construct.\nTest-Retest Reliability: Consistency of scores over time.\nInter-Rater Reliability: Agreement between different raters or observers.\n\n\n\n\n\nClassical Test Theory Overview: CTT posits that each observed score is composed of a true score and an error score:\n\\[ X = T + E \\]\nwhere:\nùëã= Observed score ùëá= True score ùê∏= Error score\n\n\nThis is a widely used measure of internal consistency reliability within CTT. It estimates the extent to which items on a test measure the same underlying construct.\n\\[\n\\alpha = \\frac{N}{N-1} \\left(1 - \\frac{\\sum \\sigma^2_{E}}{\\sigma^2_{X}}\\right)\n\\]\nWhere:\n\\(\\alpha\\) = Cronbach‚Äôs Alpha\nùëÅ = Number of items in the test\n\\(\\sigma^2_{E}\\) = Variance of the error scores\n\\(\\sigma^2_{X}\\) = Variance of the observed total scores\n\n\nUnidimensionality: All items measure a single construct.\nTau Equivalence: Each item has the same true score variance.\nIndependence of Errors: Error terms are uncorrelated across items.\n\n\n\nSensitivity to Tau Equivalence: Violations can lead to underestimation or overestimation of reliability.\nAssumes Unidimensionality: Not suitable for multidimensional scales without adjustments.\nIgnores Factor Structure: Does not account for the underlying factor model of the test.\n\n\n\n\nCoefficient Omega is a more robust alternative to Cronbach‚Äôs Alpha, especially when the assumption of tau-equivalence (equal factor loadings) is violated. Omega takes into account the factor structure of the test, making it suitable for both unidimensional and multidimensional scales.\n\n\nOmega Total (œâ‚Çú): Accounts for all common factors, both general and specific.\nOmega Hierarchical (œâ‚Çï): Represents the proportion of variance attributable to a general factor alone.\nOmega Total is given by:\n\\[\n\\omega_t = \\frac{\\sum_{i=1}^{k} \\lambda_i}{\\sum_{i=1}^{k} \\lambda_i + \\sum_{i=1}^{k} \\theta_i}\n\\]\nWhere:\n\\(\\omega_t\\) = Omega Total\n\\(\\lambda_i\\) = Factor loading for item\n\\(\\theta_i\\) = Unique variance (error variance) for item\n\\(k\\) = Total number of items\nFor a hierarchical model, Omega Hierarchical is:\n\\[\n\\omega_h = \\frac{\\lambda_g^2}{\\lambda_g^2 + \\sum_{i=1}^{k} \\theta_i}\n\\]\nwhere:\n\\(\\omega_h\\) = Omega Hierarchical\n\\(\\lambda_g\\) = Factor loading of the general factor\n\\(\\theta_i\\) = Unique variance for item \\(i\\)\n\n\n\nFactor Structure Incorporation: Utilizes confirmatory factor analysis (CFA) to model the underlying structure.\nLess Sensitive to Tau Equivalence Violations: Provides more accurate reliability estimates when tau equivalence is not met.\nApplicability to Multidimensional Scales: Suitable for tests measuring multiple constructs.\n\n\n\n\n\nHere, I will walk through the step-by-step process of calculating Cronbach‚Äôs Alpha and Coefficient Omega using R. We‚Äôll use simulated data so it‚Äôs easy to follow along (of course, you can apply these techniques to your own datasets).\nBefore we start, we need to install (and load) the necessary packages.\n\n# Install packages if not already installed (uncomment the code to run it)\n\n#install.packages(c(\"psych\", \"lavaan\", \"semTools\", \"tidyverse\"))\n\n#Now, you can load the libraries\n#library(psych)\n#library(lavaan)\n#library(semTools)\n#library(tidyverse)\n\nAlternatively,\nYou could use the ‚Äúpacman‚Äù package to easily install and load the packages above\n\n#pacman::p_load(psych,lavaan,semTools,tidyverse)\n\n\n\n\nLet‚Äôs simulate a unidimensional dataset representing responses to a psychological test with 10 items. Each item is assumed to load on a single underlying factor (the construct being measured).\n\nset.seed(999) #for reproducibility\n\n# Number of participants\nn &lt;- 200\n\n# Number of items\nk &lt;- 10\n\n# Simulate factor loadings\nlambda &lt;- rep(0.7, k)  # Equal loadings for simplicity\n\n# Simulate latent trait scores (true scores)\nlatent_trait &lt;- rnorm(n, mean = 0, sd = 1)\n\n# Simulate item responses with measurement error\n# Assuming unique variance (theta) = 1 - lambda^2\ntheta &lt;- 1 - lambda^2\n\n# Generate item responses\nitem_responses &lt;- matrix(NA, nrow = n, ncol = k)\nfor(i in 1:k){\n  item_responses[,i] &lt;- lambda[i] * latent_trait + rnorm(n, mean = 0, sd = sqrt(theta[i]))\n}\n\n# Convert to data frame and name the items\ntest_data &lt;- as.data.frame(item_responses)\ncolnames(test_data) &lt;- paste0(\"Item\", 1:k)\n\n#print the first few rows\nhead(test_data)\n\n       Item1      Item2      Item3      Item4      Item5       Item6\n1 -1.2556963  0.1350372  0.3267107 -0.4350214 -0.2341561 -0.55481802\n2  0.1676193 -0.5108128 -2.0763683 -2.3273491  0.6263964 -1.18749601\n3  0.8438537  0.6766952  0.7511039  0.7876390 -0.2862397  0.72385660\n4  0.5239119  0.5615599 -0.5887199 -0.6589739  0.8637441  0.96640344\n5  0.4627802 -0.5181453 -0.5907776 -0.2237230  0.4472270  0.39956550\n6  0.1496605 -0.4830604 -0.4002617 -0.6658249 -1.7279389 -0.05426333\n        Item7      Item8      Item9      Item10\n1  0.12906041  0.8743370  0.8313717 -1.89803952\n2  0.03811422  0.3958650 -0.9320266 -1.19657498\n3  0.59847277  0.6243699  1.0944689 -0.34952191\n4  0.26035818  1.8831289  0.4292459 -1.18586145\n5  0.87674212  0.1055399 -0.9695509  0.04756092\n6 -0.58928130 -0.1575603 -1.7274886 -1.21579287\n\n\nAs you can see, we have created a dataset (test_data) with 200 participants and 10 items. Each item response is a combination of the latent trait (latent_trait) and random measurement error. The items are designed to load equally on the latent trait for simplicity.\n\n\n\nRecall that Cronbach‚Äôs Alpha (Œ±) is a measure of internal consistency that measures how closely related a set of items are as a group.\n\n\n\nalpha_result &lt;- psych::alpha(test_data)\n\nNumber of categories should be increased  in order to count frequencies. \n\nprint(alpha_result)\n\n\nReliability analysis   \nCall: psych::alpha(x = test_data)\n\n  raw_alpha std.alpha G6(smc) average_r S/N   ase   mean   sd median_r\n      0.88      0.88    0.87      0.42 7.3 0.013 -0.062 0.66     0.42\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.85  0.88   0.9\nDuhachek  0.85  0.88   0.9\n\n Reliability if an item is dropped:\n       raw_alpha std.alpha G6(smc) average_r S/N alpha se  var.r med.r\nItem1       0.87      0.87    0.86      0.42 6.6    0.014 0.0016  0.42\nItem2       0.87      0.87    0.86      0.42 6.5    0.014 0.0019  0.42\nItem3       0.86      0.87    0.85      0.42 6.4    0.014 0.0014  0.42\nItem4       0.86      0.87    0.85      0.42 6.4    0.014 0.0019  0.42\nItem5       0.87      0.87    0.86      0.42 6.5    0.014 0.0021  0.42\nItem6       0.87      0.87    0.86      0.42 6.5    0.014 0.0021  0.42\nItem7       0.87      0.87    0.86      0.43 6.9    0.013 0.0011  0.42\nItem8       0.87      0.87    0.86      0.42 6.5    0.014 0.0018  0.42\nItem9       0.86      0.86    0.85      0.41 6.4    0.014 0.0017  0.42\nItem10      0.87      0.87    0.86      0.42 6.6    0.014 0.0021  0.42\n\n Item statistics \n         n raw.r std.r r.cor r.drop   mean   sd\nItem1  200  0.67  0.67  0.62   0.58 -0.104 0.94\nItem2  200  0.70  0.70  0.66   0.62 -0.052 0.90\nItem3  200  0.71  0.71  0.68   0.63 -0.119 0.96\nItem4  200  0.72  0.71  0.68   0.63 -0.025 1.00\nItem5  200  0.70  0.69  0.65   0.61  0.035 0.96\nItem6  200  0.69  0.69  0.64   0.60 -0.051 0.96\nItem7  200  0.64  0.63  0.57   0.53 -0.021 0.99\nItem8  200  0.69  0.69  0.64   0.60 -0.043 0.93\nItem9  200  0.73  0.72  0.69   0.64 -0.094 0.98\nItem10 200  0.68  0.69  0.64   0.60 -0.150 0.90\n\n\nExplanation:\nraw_alpha: The Cronbach‚Äôs Alpha coefficient.\nstd.alpha: Standardized alpha, similar to raw_alpha.\nG6(smc): Generalizability theory estimate with squared multiple correlations.\naverage_r: Average inter-item correlation.\nS/N: Signal-to-noise ratio.\nase: Asymptotic standard error.\nConfidence Intervals: Lower and upper bounds for alpha.\nInterpretation:\n\nThe Cronbach‚Äôs Alpha for our simulated data is 0.80, indicating acceptable internal consistency.\nThe average inter-item correlation is 0.4, which is within the acceptable range for psychological scales.\n\n\n\n\nIt‚Äôs helpful to visualize the internal consistency.\n\n# Plot the Cronbach's Alpha result\n\nplot(alpha_result)"
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "index.html#running-code",
    "href": "index.html#running-code",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html#introduction-to-reliability-index-analysis",
    "href": "index.html#introduction-to-reliability-index-analysis",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "This tutorial will serve as a Guide to Enhanced Reliability Estimation with R\n\n\nReliability refers to the consistency and precision of measurement instruments. In psychological testing, it assesses the extent to which a test produces stable and consistent results.\n\n\nMeasurement Precision: Ensures that the scores accurately reflect the true attributes being measured.\nResearch Validity: High reliability is a prerequisite for valid conclusions and replicable research findings.\nError Reduction: Minimizes the impact of random errors, enhancing the clarity of observed relationships between constructs.\n\n\n\nInternal Consistency: Degree to which items within a test measure the same construct.\nTest-Retest Reliability: Consistency of scores over time.\nInter-Rater Reliability: Agreement between different raters or observers."
  },
  {
    "objectID": "index.html#classical-test-theory-ctt-and-coefficient-alpha",
    "href": "index.html#classical-test-theory-ctt-and-coefficient-alpha",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "Classical Test Theory Overview: CTT posits that each observed score is composed of a true score and an error score:\n\\[ X = T + E \\]\nwhere:\nùëã= Observed score ùëá= True score ùê∏= Error score\n\n\nThis is a widely used measure of internal consistency reliability within CTT. It estimates the extent to which items on a test measure the same underlying construct.\n\\[\n\\alpha = \\frac{N}{N-1} \\left(1 - \\frac{\\sum \\sigma^2_{E}}{\\sigma^2_{X}}\\right)\n\\]\nWhere:\n\\(\\alpha\\) = Cronbach‚Äôs Alpha\nùëÅ = Number of items in the test\n\\(\\sigma^2_{E}\\) = Variance of the error scores\n\\(\\sigma^2_{X}\\) = Variance of the observed total scores\n\n\nUnidimensionality: All items measure a single construct.\nTau Equivalence: Each item has the same true score variance.\nIndependence of Errors: Error terms are uncorrelated across items.\n\n\n\nSensitivity to Tau Equivalence: Violations can lead to underestimation or overestimation of reliability.\nAssumes Unidimensionality: Not suitable for multidimensional scales without adjustments.\nIgnores Factor Structure: Does not account for the underlying factor model of the test.\n\n\n\n\nCoefficient Omega is a more robust alternative to Cronbach‚Äôs Alpha, especially when the assumption of tau-equivalence (equal factor loadings) is violated. Omega takes into account the factor structure of the test, making it suitable for both unidimensional and multidimensional scales.\n\n\nOmega Total (œâ‚Çú): Accounts for all common factors, both general and specific.\nOmega Hierarchical (œâ‚Çï): Represents the proportion of variance attributable to a general factor alone.\nOmega Total is given by:\n\\[\n\\omega_t = \\frac{\\sum_{i=1}^{k} \\lambda_i}{\\sum_{i=1}^{k} \\lambda_i + \\sum_{i=1}^{k} \\theta_i}\n\\]\nWhere:\n\\(\\omega_t\\) = Omega Total\n\\(\\lambda_i\\) = Factor loading for item\n\\(\\theta_i\\) = Unique variance (error variance) for item\n\\(k\\) = Total number of items\nFor a hierarchical model, Omega Hierarchical is:\n\\[\n\\omega_h = \\frac{\\lambda_g^2}{\\lambda_g^2 + \\sum_{i=1}^{k} \\theta_i}\n\\]\nwhere:\n\\(\\omega_h\\) = Omega Hierarchical\n\\(\\lambda_g\\) = Factor loading of the general factor\n\\(\\theta_i\\) = Unique variance for item \\(i\\)\n\n\n\nFactor Structure Incorporation: Utilizes confirmatory factor analysis (CFA) to model the underlying structure.\nLess Sensitive to Tau Equivalence Violations: Provides more accurate reliability estimates when tau equivalence is not met.\nApplicability to Multidimensional Scales: Suitable for tests measuring multiple constructs."
  },
  {
    "objectID": "index.html#calculations-in-r",
    "href": "index.html#calculations-in-r",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "Here, I will walk through the step-by-step process of calculating Cronbach‚Äôs Alpha and Coefficient Omega using R. We‚Äôll use simulated data so it‚Äôs easy to follow along (of course, you can apply these techniques to your own datasets).\nBefore we start, we need to install (and load) the necessary packages.\n\n# Install packages if not already installed (uncomment the code to run it)\n\n#install.packages(c(\"psych\", \"lavaan\", \"semTools\", \"tidyverse\"))\n\n#Now, you can load the libraries\n#library(psych)\n#library(lavaan)\n#library(semTools)\n#library(tidyverse)\n\nAlternatively,\nYou could use the ‚Äúpacman‚Äù package to easily install and load the packages above\n\n#pacman::p_load(psych,lavaan,semTools,tidyverse)"
  },
  {
    "objectID": "index.html#simulating-dataset",
    "href": "index.html#simulating-dataset",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "Let‚Äôs simulate a unidimensional dataset representing responses to a psychological test with 10 items. Each item is assumed to load on a single underlying factor (the construct being measured).\n\nset.seed(999) #for reproducibility\n\n# Number of participants\nn &lt;- 200\n\n# Number of items\nk &lt;- 10\n\n# Simulate factor loadings\nlambda &lt;- rep(0.7, k)  # Equal loadings for simplicity\n\n# Simulate latent trait scores (true scores)\nlatent_trait &lt;- rnorm(n, mean = 0, sd = 1)\n\n# Simulate item responses with measurement error\n# Assuming unique variance (theta) = 1 - lambda^2\ntheta &lt;- 1 - lambda^2\n\n# Generate item responses\nitem_responses &lt;- matrix(NA, nrow = n, ncol = k)\nfor(i in 1:k){\n  item_responses[,i] &lt;- lambda[i] * latent_trait + rnorm(n, mean = 0, sd = sqrt(theta[i]))\n}\n\n# Convert to data frame and name the items\ntest_data &lt;- as.data.frame(item_responses)\ncolnames(test_data) &lt;- paste0(\"Item\", 1:k)\n\n#print the first few rows\nhead(test_data)\n\n       Item1      Item2      Item3      Item4      Item5       Item6\n1 -1.2556963  0.1350372  0.3267107 -0.4350214 -0.2341561 -0.55481802\n2  0.1676193 -0.5108128 -2.0763683 -2.3273491  0.6263964 -1.18749601\n3  0.8438537  0.6766952  0.7511039  0.7876390 -0.2862397  0.72385660\n4  0.5239119  0.5615599 -0.5887199 -0.6589739  0.8637441  0.96640344\n5  0.4627802 -0.5181453 -0.5907776 -0.2237230  0.4472270  0.39956550\n6  0.1496605 -0.4830604 -0.4002617 -0.6658249 -1.7279389 -0.05426333\n        Item7      Item8      Item9      Item10\n1  0.12906041  0.8743370  0.8313717 -1.89803952\n2  0.03811422  0.3958650 -0.9320266 -1.19657498\n3  0.59847277  0.6243699  1.0944689 -0.34952191\n4  0.26035818  1.8831289  0.4292459 -1.18586145\n5  0.87674212  0.1055399 -0.9695509  0.04756092\n6 -0.58928130 -0.1575603 -1.7274886 -1.21579287\n\n\nAs you can see, we have created a dataset (test_data) with 200 participants and 10 items. Each item response is a combination of the latent trait (latent_trait) and random measurement error. The items are designed to load equally on the latent trait for simplicity."
  },
  {
    "objectID": "index.html#calculating-cronbachs-alpha",
    "href": "index.html#calculating-cronbachs-alpha",
    "title": "EDUC 6003 Advanced Statistics",
    "section": "",
    "text": "Recall that Cronbach‚Äôs Alpha (Œ±) is a measure of internal consistency that measures how closely related a set of items are as a group.\n\n\n\nalpha_result &lt;- psych::alpha(test_data)\n\nNumber of categories should be increased  in order to count frequencies. \n\nprint(alpha_result)\n\n\nReliability analysis   \nCall: psych::alpha(x = test_data)\n\n  raw_alpha std.alpha G6(smc) average_r S/N   ase   mean   sd median_r\n      0.88      0.88    0.87      0.42 7.3 0.013 -0.062 0.66     0.42\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.85  0.88   0.9\nDuhachek  0.85  0.88   0.9\n\n Reliability if an item is dropped:\n       raw_alpha std.alpha G6(smc) average_r S/N alpha se  var.r med.r\nItem1       0.87      0.87    0.86      0.42 6.6    0.014 0.0016  0.42\nItem2       0.87      0.87    0.86      0.42 6.5    0.014 0.0019  0.42\nItem3       0.86      0.87    0.85      0.42 6.4    0.014 0.0014  0.42\nItem4       0.86      0.87    0.85      0.42 6.4    0.014 0.0019  0.42\nItem5       0.87      0.87    0.86      0.42 6.5    0.014 0.0021  0.42\nItem6       0.87      0.87    0.86      0.42 6.5    0.014 0.0021  0.42\nItem7       0.87      0.87    0.86      0.43 6.9    0.013 0.0011  0.42\nItem8       0.87      0.87    0.86      0.42 6.5    0.014 0.0018  0.42\nItem9       0.86      0.86    0.85      0.41 6.4    0.014 0.0017  0.42\nItem10      0.87      0.87    0.86      0.42 6.6    0.014 0.0021  0.42\n\n Item statistics \n         n raw.r std.r r.cor r.drop   mean   sd\nItem1  200  0.67  0.67  0.62   0.58 -0.104 0.94\nItem2  200  0.70  0.70  0.66   0.62 -0.052 0.90\nItem3  200  0.71  0.71  0.68   0.63 -0.119 0.96\nItem4  200  0.72  0.71  0.68   0.63 -0.025 1.00\nItem5  200  0.70  0.69  0.65   0.61  0.035 0.96\nItem6  200  0.69  0.69  0.64   0.60 -0.051 0.96\nItem7  200  0.64  0.63  0.57   0.53 -0.021 0.99\nItem8  200  0.69  0.69  0.64   0.60 -0.043 0.93\nItem9  200  0.73  0.72  0.69   0.64 -0.094 0.98\nItem10 200  0.68  0.69  0.64   0.60 -0.150 0.90\n\n\nExplanation:\nraw_alpha: The Cronbach‚Äôs Alpha coefficient.\nstd.alpha: Standardized alpha, similar to raw_alpha.\nG6(smc): Generalizability theory estimate with squared multiple correlations.\naverage_r: Average inter-item correlation.\nS/N: Signal-to-noise ratio.\nase: Asymptotic standard error.\nConfidence Intervals: Lower and upper bounds for alpha.\nInterpretation:\n\nThe Cronbach‚Äôs Alpha for our simulated data is 0.80, indicating acceptable internal consistency.\nThe average inter-item correlation is 0.4, which is within the acceptable range for psychological scales.\n\n\n\n\nIt‚Äôs helpful to visualize the internal consistency.\n\n# Plot the Cronbach's Alpha result\n\nplot(alpha_result)"
  }
]